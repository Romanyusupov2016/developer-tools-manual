git init - создание репозитория.
git add - добавление изменений в Staging Area.
git add . - добавление изменений во всех файлах в Staging Area.
git commit -m "Comment" - добавление изменений из Staging Area в репозиторий.
git commit --amend -m "Comment" - добавить изменения в последний коммит. Изменить сообщение последнего коммита.
git status - состояние репозитория.
git diff - непроиндекированные изменения в файле (изменения в рабочем каталоге).
git diff --staged - проиндекированные изменения в файле (изменения в staging area).
git log - история коммитов.
git log --pretty=oneline - одностроничный формат вывода.
git log --all - показать все коммиты.
git log -n - показать последние n - коммитов.
git log --graph --all - история коммитов с графическим отображением веток.
git show <hash> - информация о коммите.
git checkout <hash> - установить рабочий каталог в состояние указанного коммита.
git checkout <hash> file - установить файл в рабочем каталоге в состояние указанного коммита.
git checkout <tag> - откатиться к коммиту с указанным тегом.
git checkout -- file - восстановить файл в рабочем каталоге из последнего коммита (отмнена непроиндексированных изменений).
git tag v1 - создание тега v1 для текущего коммита.
git tag - список установленных тегов.
git tag -d v1 - удаление тега.
git reset HEAD file - удалить файл из Staging Area.
git reset --hard <tag|hash> - переместить HEAD на коммит, указанный тегом или хешем, и синхронизировать рабочий каталог в соответсвии с коммитом в репозитории.
git revert HEAD - отмена последнего коммита (создаётся новый коммит, отменяющий изменения в последнем коммите).
git mv - перемещение, переименование файла.
git rm - удаление файла.

git branch - список локальных веток.
git branch -a - список всех веток, локальных и удалённых.
git branch branchName - создание ветки.
git branch -d branchName - удаление ветки.
git branch --track newBranch origin/branchName - создать локальную ветку и настроить её на отслеживание изменений в удалённой ветке.
git checkout -b newBranch - создать ветку и переключиться на неё.
git checkout branch_name - переключиться на ветку.
git merge branch_name - слить указанную ветку в текущую ветку.
git rebase branch_name - перебазирование указанной ветки на текущую ветку.

git clone repository cloned_repository - клонирование репозитория под именем cloned_repository (Создание клона репозитория).
git clone --bare repository repository.git - создание чистого репозитория из указанного репозитория.
git remote - список подключенных удалённых репозиториев.
git remote show origin - информация об удалённом репозитории.
git remote add shared repository.git - добавление чистого репозитория в качестве удалённого репозитория (под именем shared).
git fetch origin - получение изменений (коммитов) из удалённой ветки.
git pull origin - получение изменений из удалённой ветки и слияние изменений в локальную ветку.
git push origin master - отправить изменения на удалённую ветку.
git push origin --delete remoteBranch - удаление удалёной ветки (на сервере).

git config --global user.name "Your Name"
git config --global user.email "email@gmail.com" - установка имени и электронной почты.

git config --list - показать все настройки конфигурации.
git config <key> - показать значение указанного ключа в настройках конфигурации.
git help command - справка по git комманде.

/etc/gitconfig - системный файл конфигурации  --system.
/home/user/.gitconfig - файл конфигурации пользователя --global.
.git/config - файл конфигурации проекта.

HEAD - указатель на текущую, активную ветку.
branch - указатель на последний коммит.
origin - имя удалённого репозитория по умолчанию.
origin/branch_name - имя удалённой ветки.
.git - служебный каталог git-репозитория.
repository.git - чистый репозиторий (репозиторий представляющий каталог .git, без рабочего каталога).
.gitignore - исключение из версионного котнтроля.
https://github.com/github/gitignore - список примеров .gitignore шаблонов.








